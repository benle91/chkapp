# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing on Android, read the docs:
# https://circleci.com/docs/2.0/language-android/ for more details.
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  android: circleci/android@1.0.3

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
references:
  # Workspaces represent the spaces we work on & are useful for sharing data between jobs.
  # Create a workspace with the ~/code directory.
  workspace:
    - &workspace ~/chk
  # Docker Image Configs
  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-27
    resource_class: xlarge
    environment:
      TZ: "Asia/Ho_Chi_Minh"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3048m
      GRADLE_OPTS: -Xmx3048m -Dkotlin.compiler.execution.strategy=in-process -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError
      TERM: dumb

    ruby_dependencies: &ruby_dependencies
      run:
        name: Download Ruby Dependencies
        command: |
          gem install bundler
          bundle check || bundle update --system || bundle install --path vendor/bundle


jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  staging_distribution:
    # These next lines define the Android machine image executor.
    # See: https://circleci.com/docs/2.0/executor-types/
    executor:
      name: android/android-machine

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout

#      # The next step will run the unit tests
#      - android/run-tests:
#          test-command: ./gradlew lint testDebug --continue

      # And finally run the release build
      - run:
          name: Assemble debug build
          command: |
            ./gradlew assembleDebug

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - staging_distribution
